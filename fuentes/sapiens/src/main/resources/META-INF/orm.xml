<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings
	xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
	version="2.0">

	<entity
		class="com.vortexbird.sapiens.domain.Usuario">
		
		<named-native-query
			name="Usuario.getUsuariosPorTipo"
			result-set-mapping="UsuarioDTO">
			<query>
	        <![CDATA[
	        	SELECT 		usu.usua_id usuaId, 
				usu.nombre nombre, 
				usu.apellido apellido, 
				usu.genero genero, 
				usu.codigo codigo, 
		        usu.identificacion identificacion, 
		        usu.celular celular, 
		        usu.correo correo, 
		        usu."password" "password", 
		        usu.fecha_creacion fechaCreacion, 
		        usu.fecha_modificacion fechaModificacion, 
		        usu.usu_creador usuCreador, 
		        usu.usu_modificador usuModificador, 
		        usu.estado_registro estadoRegistro, 
		        usu.prog_id progId_Programa, 
		        usu.tius_id tiusId_TipoUsuario
				FROM usuario usu
				inner join programa prog on prog.prog_id = usu.prog_id 
				inner join facultad facu on facu.facu_id = prog.facu_id
				WHERE ((:pTiusId != -1 AND tius_id = :pTiusId) OR :pTiusId = -1)
				and ((:pSemestre <> -1 and usu.semestre = :pSemestre) or (:pSemestre = -1))
				and ((:pProgId <> -1 and prog.prog_id = :pProgId) or (:pProgId = -1))
				and ((:pFacuId <> -1 and facu.facu_id = :pFacuId) or (:pFacuId = -1))
			  AND (UPPER(usu.codigo) LIKE UPPER(:pFiltro) OR usu.identificacion||'' LIKE UPPER(:pFiltro) OR UPPER(usu.nombre) LIKE UPPER(:pFiltro) 
			  OR UPPER(usu.apellido) LIKE UPPER(:pFiltro) OR UPPER(usu.correo) LIKE UPPER(:pFiltro))
				ORDER BY usu.codigo
	        ]]>
	        </query>
		</named-native-query>
		
		<named-native-query
			name="Usuario.getAllUsuariosPorTipo"
			result-set-mapping="listaUsuaId">
			<query>
	        <![CDATA[
	        	SELECT 		usu.usua_id usuaId
				FROM usuario usu
				inner join programa prog on prog.prog_id = usu.prog_id 
				inner join facultad facu on facu.facu_id = prog.facu_id
				WHERE ((:pTiusId != -1 AND tius_id = :pTiusId) OR :pTiusId = -1)
				and ((:pSemestre <> -1 and usu.semestre = :pSemestre) or (:pSemestre = -1))
				and ((:pProgId <> -1 and prog.prog_id = :pProgId) or (:pProgId = -1))
				and ((:pFacuId <> -1 and facu.facu_id = :pFacuId) or (:pFacuId = -1))
			  AND (UPPER(usu.codigo) LIKE UPPER(:pFiltro) OR usu.identificacion||'' LIKE UPPER(:pFiltro) OR UPPER(usu.nombre) LIKE UPPER(:pFiltro) 
			  OR UPPER(usu.apellido) LIKE UPPER(:pFiltro) OR UPPER(usu.correo) LIKE UPPER(:pFiltro))
				ORDER BY usu.codigo
	        ]]>
	        </query>
		</named-native-query>

		<named-native-query
			name="Usuario.getUsuariosPorTipo.count"
			result-set-mapping="UsuarioDTOCount">
			<query>
	        <![CDATA[
	        	SELECT 		count(*) as total
				FROM usuario usu
				inner join programa prog on prog.prog_id = usu.prog_id 
				inner join facultad facu on facu.facu_id = prog.facu_id
				WHERE ((:pTiusId != -1 AND tius_id = :pTiusId) OR :pTiusId = -1)
				and ((:pSemestre <> -1 and usu.semestre = :pSemestre) or (:pSemestre = -1))
				and ((:pProgId <> -1 and prog.prog_id = :pProgId) or (:pProgId = -1))
				and ((:pFacuId <> -1 and facu.facu_id = :pFacuId) or (:pFacuId = -1))
			  AND (UPPER(usu.codigo) LIKE UPPER(:pFiltro) OR usu.identificacion||'' LIKE UPPER(:pFiltro) OR UPPER(usu.nombre) LIKE UPPER(:pFiltro) 
			  OR UPPER(usu.apellido) LIKE UPPER(:pFiltro) OR UPPER(usu.correo) LIKE UPPER(:pFiltro))	
	        ]]>
	        </query>
		</named-native-query>
	</entity>
	
	<entity
		class="com.vortexbird.sapiens.domain.Pregunta">
		<named-native-query
			name="Pregunta.getPreguntasPorModulos"
			result-set-mapping="getPreguntasPorModulos">
			<query>
	        <![CDATA[
	        	SELECT 		preg.preg_id pregId,
					modu.nombre nombreModulo,
					preg.descripcion descripcion,
					tipr.nombre nombreTipoPregunta,
					preg.complejidad complejidad
				FROM pregunta preg
				inner join modulo modu on modu.modu_id = preg.modu_id 
				inner join tipo_pregunta tipr on tipr.tprg_id = preg.tprg_id 
				where preg.estado_registro = :pEstado
				and modu.estado_registro = :pEstado
				and (((-1) not in :pModiId AND modu.modu_id in :pModiId) OR ((-1) in :pModiId ))
			  AND (preg.preg_id ||'' LIKE UPPER(:pFiltro) OR modu.nombre ||'' LIKE UPPER(:pFiltro) OR UPPER(preg.descripcion) LIKE UPPER(:pFiltro) 
			  OR preg.complejidad ||'' LIKE UPPER(:pFiltro) OR UPPER(tipr.nombre) LIKE UPPER(:pFiltro))
				ORDER BY preg.preg_id
	        ]]>
	        </query>
		</named-native-query>
		
		<named-native-query
			name="Pregunta.getAllPreguntasPorModulos"
			result-set-mapping="listaPreguntas">
			<query>
	        <![CDATA[
	        	SELECT 		preg.preg_id pregId
				FROM pregunta preg
				inner join modulo modu on modu.modu_id = preg.modu_id 
				inner join tipo_pregunta tipr on tipr.tprg_id = preg.tprg_id 
				where preg.estado_registro = :pEstado
				and modu.estado_registro = :pEstado
				and (((-1) not in :pModiId AND modu.modu_id in :pModiId) OR ((-1) in :pModiId ))
			  AND (preg.preg_id ||'' LIKE UPPER(:pFiltro) OR modu.nombre ||'' LIKE UPPER(:pFiltro) OR UPPER(preg.descripcion) LIKE UPPER(:pFiltro) 
			  OR preg.complejidad ||'' LIKE UPPER(:pFiltro) OR UPPER(tipr.nombre) LIKE UPPER(:pFiltro))
				ORDER BY preg.preg_id
	        ]]>
	        </query>
		</named-native-query>

		<named-native-query
			name="Pregunta.getPreguntasPorModulos.count"
			result-set-mapping="countGetPreguntasPorModulos">
			<query>
	        <![CDATA[
	        	SELECT 		count(*) as total
					FROM pregunta preg
					inner join modulo modu on modu.modu_id = preg.modu_id 
					inner join tipo_pregunta tipr on tipr.tprg_id = preg.tprg_id 
					where preg.estado_registro = :pEstado
					and modu.estado_registro = :pEstado
					and (((-1) not in :pModiId AND modu.modu_id in :pModiId) OR ((-1) in :pModiId ))
				  AND (preg.preg_id ||'' LIKE UPPER(:pFiltro) OR modu.nombre ||'' LIKE UPPER(:pFiltro) OR UPPER(preg.descripcion) LIKE UPPER(:pFiltro) 
				  OR preg.complejidad ||'' LIKE UPPER(:pFiltro) OR UPPER(tipr.nombre) LIKE UPPER(:pFiltro))	
	        ]]>
	        </query>
		</named-native-query>
	</entity>

	<entity class="com.vortexbird.sapiens.domain.DetallePruebaUsuario">
		<named-native-query
			name="DetallePruebaUsuario.cantidadEjecucionesPorModulo"
			result-set-mapping="DetallePruebaUsuarioCount">
			<query>
	        <![CDATA[
	        	select 	count(dpru.*) total
				from 	modulo modu 
				inner	join pregunta preg on preg.modu_id = modu.modu_id 
				inner   join respuesta resp on resp.preg_id = preg.preg_id 
				inner   join detalle_prueba_usuario dpru on dpru.resp_id = resp.resp_id 
				where   modu.modu_id = :pModuId					
	        ]]>
	        </query>
		</named-native-query>
		
		<named-native-query
			name="DetallePruebaUsuario.cantidadEjecucionesPorUsuario"
			result-set-mapping="DetallePruebaUsuarioCount">
			<query>
	        <![CDATA[
	        	select 	count(dpru.*) total
				from 	modulo modu 
				inner	join pregunta preg on preg.modu_id = modu.modu_id 
				inner   join respuesta resp on resp.preg_id = preg.preg_id 
				inner   join detalle_prueba_usuario dpru on dpru.resp_id = resp.resp_id 
				inner   join prueba_usuario prus on prus.prus_id  = dpru .prus_id 
				where   prus.usua_id = :pUsuaId
					        	
	        ]]>
	        </query>
		</named-native-query>
		
		<named-native-query
			name="DetallePruebaUsuario.cantidadEjecucionesPorPregunta"
			result-set-mapping="DetallePruebaUsuarioCount">
			<query>
	        <![CDATA[
	        	select 	count(dpru.*) total
				from 	prueba_pregunta prpr
				inner	join pregunta preg on preg.preg_id = prpr.preg_id 
				inner   join respuesta resp on resp.preg_id = preg.preg_id 
				inner   join detalle_prueba_usuario dpru on dpru.resp_id = resp.resp_id 
				inner   join prueba_usuario prus on prus.prus_id  = dpru .prus_id
				where   prpr.preg_id = :pPregId
				      	
	        ]]>
	        </query>
		</named-native-query>
	</entity>

	<entity class="com.vortexbird.sapiens.domain.PruebaUsuario">
		<named-native-query
			name="PruebaUsuario.findByUsuario"
			result-set-mapping="PruebaUsuarioDTO">
			<query>
	        <![CDATA[
				select prus.prus_id prusId, prue.prue_id prueId, tipr.descripcion tipoPrueba, prue.fecha_inicial fechaInicial, prue.fecha_final fechaFinal, 
					prus.fecha_inicio fechaInicio, prus.tiempo_disponible tiempoDisponible, UPPER(usua.apellido) || ', ' || LOWER(usua.nombre) propietario, 
					espr.descripcion nombreEstadoPrueba, prus.total_preguntas totalPreguntas, prus.total_respuestas_correctas totalRespuestasCorrectas
				from prueba_usuario prus
				inner join prueba prue on prue.prue_id = prus.prue_id
				inner join estado_prueba espr on espr.espr_id = prus.espr_id
				inner join usuario usua on usua.usua_id = prue.usu_creador
				inner join tipo_prueba tipr on tipr.tipr_id = prue.tipr_id
				where ((:pPrusId != -1 AND prus.prus_id = :pPrusId) OR :pPrusId = -1)
					and prus.usua_id = :pUsuaId
					and prus.estado_registro = :pEstado
					and prue.estado_registro = :pEstado
				ORDER BY prue.prue_id desc
	        ]]>
	        </query>
		</named-native-query>
	</entity>

</entity-mappings>